@model UserManagementCenter.Models.User

@{
    ViewBag.Title = "AddOrEdit";
}

<!--This data will be submitted to the AddOrEdit() post method in the User Controller-->
@using (Html.BeginForm("AddOrEdit", "User", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return userManagementPost(this);", reset_Url = Url.Action("AddOREdit", "User", new { id = 0}) }))
{
    @Html.AntiForgeryToken()
<div class="row">
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.ImagePath)

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Office, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                    @if(Model.UserID != 0)
                    {
                        <a class="btn btn-success" onclick="refreshAndNewTab('@Url.Action("AddOrEdit", "User", new { id = 0 })', false)">
                            <i class="fade fa-plus">Add New</i>
                        </a>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Url.Content(Model.ImagePath)" style="margin:10px" height="200" width="200" id="imagePreview"/>
                <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this, document.getElementById('imagePreview'))"/>
            </div>
        </div>
      </div>

    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
